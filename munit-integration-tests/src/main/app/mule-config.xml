<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:jdbc="http://www.mulesoft.org/schema/mule/jdbc"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
      xmlns:jira="http://www.mulesoft.org/schema/mule/jira"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xsi:schemaLocation="
        http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd

        http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
        http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
        http://www.mulesoft.org/schema/mule/jdbc http://www.mulesoft.org/schema/mule/jdbc/current/mule-jdbc.xsd
        http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
        http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
        http://www.mulesoft.org/schema/mule/jira http://www.mulesoft.org/schema/mule/jira/current/mule-jira.xsd">


    <spring:bean id="jdbcDataSource"
                 class="org.enhydra.jdbc.standard.StandardDataSource" destroy-method="shutdown">
        <spring:property name="driverName" value="org.h2.Driver"/>
        <spring:property name="url" value="jdbc:h2:mem:test"/>
        <spring:property name="user" value=""/>
        <spring:property name="password" value=""/>

    </spring:bean>
    <vm:endpoint path="foo" exchange-pattern="request-response" name="foo"/>
    <vm:endpoint name="dqlQueue" address="dql"/>

    <jdbc:connector name="jdbcConnectorInbound"
                    dataSource-ref="jdbcDataSource">

        <jdbc:query key="lookupJob"
                    value="SELECT * FROM jobtitlelookup WHERE jobtitleid = #[variable:jobid]"/>

    </jdbc:connector>

    <custom-transformer name="exceptionTransformer" class="org.mule.transformers.ExceptionTransformer"/>


    <flow name="echoFlow">
        <echo-component/>
        <logger level="ERROR" message="some #[payload]"/>
    </flow>

    <sub-flow name="exceptionFlow">
        <transformer ref="exceptionTransformer"/>
    </sub-flow>

    <custom-transformer name="httpToMapTransformer"
                        class="org.mule.transport.http.transformers.HttpRequestBodyToParamMap"/>


    <sub-flow name="setValueFlow"  >
        <set-variable variableName="areCredentialsValid" value="#[uiUsername.equals(requestUsername)? Boolean.TRUE : Boolean.FALSE]" doc:name="areCredentialsValid"/>
    </sub-flow>

    <sub-flow name="enrichMessageFlow">
        <enricher>
            <processor-chain>
                <jdbc:outbound-endpoint connector-ref="jdbcConnectorInbound"
                                        queryKey="lookupJob" exchange-pattern="request-response"/>

                <choice>
                    <when evaluator="groovy" expression="return ((ArrayList)payload).size > 0">
                        <expression-transformer evaluator="groovy"
                                                expression="return payload[0].get('jobtitle')"/>
                    </when>
                    <otherwise>
                        <expression-transformer evaluator="string"
                                                expression="HIR"/>
                    </otherwise>
                </choice>
            </processor-chain>

            <enrich target="#[variable:job]" source="#[payload]"/>
        </enricher>
    </sub-flow>


    <flow name="main">

        <flow-ref name="enrichMessageFlow"/>
        <jira:create-group groupName="#[variable:job]" userName="someUserName"/>

    </flow>


    <flow name="outboundEndPointFlow">
        <http:outbound-endpoint method="GET"
                                host="localhost" port="10443" path="test"
                                exchange-pattern="request-response"/>

    </flow>

    <flow name="outboundEndPointFlowOneWay">

        <http:outbound-endpoint method="GET"
                                host="#[payload]" port="1033" path="one-way"
                                exchange-pattern="one-way"/>

    </flow>

    <flow name="callingJira">
        <jira:create-group groupName="someGroupName" userName="someUserName" doc:name="jiraMp"/>
    </flow>



    <flow name="untilSuccessfulFlow">
        <until-successful objectStore-ref="_defaultInMemoryObjectStore" maxRetries="2">
            <flow-ref name="callingJira"/>
        </until-successful>
    </flow>


    <flow name="FinishDataLoadJobsFlow" doc:name="FinishDataLoadJobsFlow">
        <poll frequency="1000" doc:name="Poll">
            <processor-chain doc:name="Processor Chain">
                <jira:create-group groupName="someGroupName" userName="someUserName"/>
            </processor-chain>
        </poll>

        <foreach doc:name="For Each">
            <async>
                <flow-ref name="loggerTestFlow"/>
            </async>
        </foreach>

    </flow>


    <flow name="loggerTestFlow">
        <logger level="ERROR" message="Information"/>
    </flow>

    <flow name="setMuleAppHomeFlow">
        <set-payload value="${app.home}"/>
    </flow>

    <!-- just to validate correct initialization of the xml-to-object-transformer -->
    <flow name="xstream-issue-isolationFlow1" doc:name="xstream-issue-isolationFlow1">
        <mulexml:xml-to-object-transformer doc:name="ToObject">
            <mulexml:alias name="myAlias" class="org.mule.munit.Consumer" />
        </mulexml:xml-to-object-transformer>
    </flow>

     <sub-flow name="callingJiraSubFlow">
         <jira:create-group groupName="someGroupName" userName="someUserName"/>
     </sub-flow>

    <flow name="callingFlow">
        <flow-ref name="callingJira"/>
    </flow>

    <flow name="callingSubFlow">
        <flow-ref name="callingJiraSubFlow"/>
    </flow>

    <flow name="setVariable">
        <set-variable variableName="myvar" value="#[message.payload]" doc:name="Variable"/>
        <echo-component/>
    </flow>

    <flow name="duplicateMessageProcessors">
        <set-variable variableName="myvar1" value="#[message.payload]" doc:name="Variable1"/>
        <set-variable variableName="myvar2" value="#[message.payload + flowVars['myvar1']]" doc:name="Variable2"/>
        <echo-component/>
    </flow>

    <flow name="echo">
        <inbound-endpoint ref="foo"/>
        <static-component>
            <return-data>foo</return-data>
        </static-component>
    </flow>

</mule>